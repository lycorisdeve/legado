name: Sync Upstream Releases

permissions:
  contents: write

on:
  schedule:
    - cron: '0 3 * * *'  # 每天北京时间 11:00
  workflow_dispatch:

jobs:
  sync-releases:
    name: Sync full releases from gedoor/legado
    runs-on: ubuntu-latest

    steps:
      - name: Checkout your fork
        uses: actions/checkout@v3

      - name: Install GitHub CLI & jq
        run: |
          sudo apt update
          sudo apt install -y gh jq

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Clone upstream repo and prepare workspace
        run: |
          gh repo clone gedoor/legado legado-upstream
          mkdir -p releases_download

      - name: Fetch releases and sync missing ones
        run: |
          upstream_repo="gedoor/legado"
          fork_repo="${{ github.repository }}"

          echo "Fetching upstream releases..."
          gh api -H "Accept: application/vnd.github+json" /repos/$upstream_repo/releases > ../upstream_releases.json
          echo "Fetching fork releases..."
          gh api -H "Accept: application/vnd.github+json" /repos/$fork_repo/releases > ../fork_releases.json

          # 获取下游已有的release tags，转为空格分隔的字符串
          existing_tags=$(jq -r '.[].tag_name' ../fork_releases.json | tr '\n' ' ')
          echo "Downstream already has tags: $existing_tags"

          # 遍历所有上游非draft的release
          jq -c '.[] | select(.draft == false)' ../upstream_releases.json | while read -r release; do
            tag=$(echo "$release" | jq -r '.tag_name')

            # 如果下游已有该tag，则跳过
            if echo "$existing_tags" | grep -qw "$tag"; then
              echo "✔ Release $tag already exists in fork, skipping."
              continue
            fi

            title=$(echo "$release" | jq -r '.name')
            body=$(echo "$release" | jq -r '.body // ""')
            prerelease=$(echo "$release" | jq -r '.prerelease')

            download_dir="../releases_download/$tag"
            mkdir -p "$download_dir"

            echo "⬇ Downloading assets for $tag..."
            gh release download "$tag" -R $upstream_repo -D "$download_dir"

            echo "🚀 Creating release $tag in fork..."
            if [ "$prerelease" = "true" ]; then
              gh release create "$tag" "$download_dir"/* \
                -R "$fork_repo" \
                -t "$title" \
                -n "$body" \
                --prerelease
            else
              gh release create "$tag" "$download_dir"/* \
                -R "$fork_repo" \
                -t "$title" \
                -n "$body"
            fi

            echo "✅ Synced release: $tag"
          done
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
