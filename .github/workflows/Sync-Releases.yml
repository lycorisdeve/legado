name: Sync Releases

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每天午夜自动执行一次，可根据需要调整或删除

jobs:
  sync_releases:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Fetch upstream release tags
      run: |
        echo "获取 upstream releases 列表"
        gh release list --repo gedoor/legado --limit 1000 > upstream.txt
        cut -f1 -d$'\t' upstream.txt | sort > upstream_tags.txt

    - name: Fetch current repo release tags
      run: |
        echo "获取本仓库 releases 列表"
        gh release list --limit 1000 > my.txt
        cut -f1 -d$'\t' my.txt | sort > my_tags.txt

    - name: Determine new releases to sync
      run: |
        comm -23 upstream_tags.txt my_tags.txt | grep -vE '^\s*$|^-$' > new_releases.txt
        echo "new_releases=$(paste -sd ',' new_releases.txt)" >> $GITHUB_OUTPUT
        echo "新版本标签列表："
        cat new_releases.txt || echo "(无新版本)"

    - name: Sync new releases
      run: |
        while IFS= read -r tag; do
          echo "开始同步 Release: $tag"

          if ! release_json=$(gh release view "$tag" --repo gedoor/legado --json name,body,isDraft,isPrerelease); then
            echo "⚠️ Release $tag 不存在或访问失败，跳过"
            continue
          fi

          name=$(echo "$release_json" | jq -r '.name')
          body=$(echo "$release_json" | jq -r '.body')
          draft=$(echo "$release_json" | jq -r '.isDraft')
          prerelease=$(echo "$release_json" | jq -r '.isPrerelease')

          mkdir -p downloads
          if ! gh release download "$tag" --repo gedoor/legado --dir downloads; then
            echo "没有资产文件"
          fi

          if [ "$(ls -A downloads)" ]; then
            gh release create "$tag" downloads/* --title "$name" --notes "$body" $( [ "$draft" = "true" ] && echo "--draft" ) $( [ "$prerelease" = "true" ] && echo "--prerelease" )
          else
            gh release create "$tag" --title "$name" --notes "$body" $( [ "$draft" = "true" ] && echo "--draft" ) $( [ "$prerelease" = "true" ] && echo "--prerelease" )
          fi

          rm -rf downloads
          echo "Release $tag 同步完成"
        done < new_releases.txt
