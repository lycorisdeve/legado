name: Sync Releases from gedoor/legado

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # 每天凌晨2点自动执行一次

jobs:
  sync_releases:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repository
      uses: actions/checkout@v3

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Fetch upstream release tags
      run: |
        gh auth setup-git
        gh release list --repo gedoor/legado --limit 1000 > upstream.txt
        cut -f1 -d$'\t' upstream.txt | sort > upstream_tags.txt

    - name: Fetch my fork release tags
      run: |
        gh release list --limit 1000 > my.txt
        cut -f1 -d$'\t' my.txt | sort > my_tags.txt

    - name: Find new releases to sync
      run: |
        comm -23 upstream_tags.txt my_tags.txt | grep -vE '^\s*$|^-$' > new_releases.txt
        echo "new_releases=$(paste -sd ',' new_releases.txt)" >> $GITHUB_OUTPUT
        echo "New releases to sync:"
        cat new_releases.txt || echo "(none)"

    - name: Sync new releases
      if: steps.find_new_releases.outputs.new_releases != ''
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        while IFS= read -r tag || [[ -n "$tag" ]]; do
          [[ -z "$tag" || "$tag" == "-" ]] && continue
          echo "Sync release: [$tag]"

          if ! release_json=$(gh release view "$tag" --repo gedoor/legado --json name,body,isDraft,isPrerelease); then
            echo "⚠️ Release $tag 不存在或访问失败，跳过"
            continue
          fi

          name=$(echo "$release_json" | jq -r '.name')
          body=$(echo "$release_json" | jq -r '.body')
          draft=$(echo "$release_json" | jq -r '.isDraft')
          prerelease=$(echo "$release_json" | jq -r '.isPrerelease')

          tmp_dir=$(mktemp -d)
          echo "Downloading assets for $tag ..."
          if ! gh release download "$tag" --repo gedoor/legado --dir "$tmp_dir" > /dev/null 2>&1; then
            echo "No assets or download failed"
          fi

          echo "Creating release $tag in fork..."
          if [ "$(ls -A "$tmp_dir")" ]; then
            gh release create "$tag" "$tmp_dir"/* --title "$name" --notes "$body" $( [ "$draft" = "true" ] && echo "--draft" ) $( [ "$prerelease" = "true" ] && echo "--prerelease" )
          else
            gh release create "$tag" --title "$name" --notes "$body" $( [ "$draft" = "true" ] && echo "--draft" ) $( [ "$prerelease" = "true" ] && echo "--prerelease" )
          fi

          rm -rf "$tmp_dir"
          echo "Release $tag synced"
        done < new_releases.txt
